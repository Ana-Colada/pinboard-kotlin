name: Android CI

on: [push, pull_request]

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.3
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Run unit tests and capture code coverage
        run: ./gradlew clean testPinboardapiDebugUnitTest --stacktrace

      - name: Collect all test results from all modules
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Archive test results
        uses: actions/upload-artifact@v2.2.0
        with:
          name: junit-results-unit-tests
          path: junit

  build_apk:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.3
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Assemble APK
        run: ./gradlew clean assemblePinboardapi --stacktrace

      - name: Archive APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: debug-apk
          path: app/build/outputs/apk/pinboardapi/debug

  espresso_prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.3
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties
      - name: Assemble Espresso Tests
        run: ./gradlew clean app:assemblePinboardApiDebugAndroidTest --stacktrace

      - name: Archive Test APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: tests-apk
          path: app/build/outputs/apk/androidTest/pinboardapi/debug

  instrumented_tests:
    name: Instrumented Tests
    runs-on: macOS-latest
    needs: [unit_tests, build_apk, espresso_prepare]
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - uses: actions/download-artifact@v2.0.5

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2.11.0
        with:
          api-level: 29
          arch: x86_64
          script: ./scripts/espresso-run.sh
