plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
    id("kotlin-kapt")
    id("com.getkeepsafe.dexcount")
}

apply {
    from("coverage-report.gradle")
}

android {
    compileSdkVersion(Versions.compileSdkVersion)
    buildToolsVersion(Versions.buildToolsVersion)

    defaultConfig {
        applicationId = AppInfo.applicationId
        versionCode = AppInfo.versionCode
        versionName = AppInfo.versionName
        minSdkVersion(Versions.minSdkVersion)
        targetSdkVersion(Versions.targetSdkVersion)

        resConfigs("en", "pt", "es")

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug.keystore")
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", AppInfo.appName + " Dev"

            testCoverageEnabled = true
            minifyEnabled false
        }
        release {
            resValue "string", "app_name", AppInfo.appName

            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    sourceSets {
        main.java.srcDirs("src/main/kotlin")

        test.java.srcDirs("src/test/kotlin")

        androidTest.java.srcDirs("src/androidTest/kotlin", "src/test/kotlin")
    }

    testOptions {
        animationsDisabled true

        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true

            all {
                useJUnitPlatform()
            }
        }
    }
}

dependencies {
    implementation(name: "fibelatti-core", ext: "aar")
    implementation(name: "fibelatti-arch-components", ext: "aar")

    // Kotlin
    implementation(Dependencies.kotlin)
    implementation(Dependencies.coroutinesCore)
    implementation(Dependencies.coroutinesAndroid)

    // Android
    implementation(Dependencies.supportLibrary)
    implementation(Dependencies.materialDesign)
    implementation(Dependencies.constraintLayout)

    implementation(Dependencies.archComponents)
    kapt(Dependencies.archComponentsCompiler)

    implementation(Dependencies.customTabs)

    // Misc
    implementation(Dependencies.dagger)
    kapt(Dependencies.daggerCompiler)

    implementation(Dependencies.moshiKotlin)

    implementation(Dependencies.retrofit)
    implementation(Dependencies.retrofitMoshiConverter)
    implementation(Dependencies.coroutinesCallAdapter)
    implementation(Dependencies.httpLoggingInterceptor)

    // Test
    testRuntimeOnly(TestDependencies.junit5Engine)
    testRuntimeOnly(TestDependencies.junitVintage)

    testCompileOnly(TestDependencies.junit)

    testImplementation(name: "fibelatti-core-test", ext: "aar")
    testImplementation(name: "fibelatti-arch-components-test", ext: "aar")

    testImplementation(TestDependencies.junit5)
    testImplementation(TestDependencies.junit5Params)
    testImplementation(TestDependencies.mockitoCore)
    testImplementation(TestDependencies.archComponentsTest)

    androidTestImplementation(Dependencies.supportAnnotations)
    androidTestImplementation(TestDependencies.mockitoAndroid)
    androidTestImplementation(TestDependencies.archComponentsTest)
    androidTestImplementation(TestDependencies.testRunner)
    androidTestImplementation(TestDependencies.kotlinTest)

    androidTestImplementation(name: "fibelatti-core-test", ext: "aar")
}
